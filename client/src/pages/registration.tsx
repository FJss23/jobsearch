import Head from "next/head";
import Link from "next/link";
import React, { useState } from "react";
import { z } from "zod";

export default function Registration() {
  const [errors, setErrors] = useState<ErrorField[]>([]);

  const submitHandler = (event: React.SyntheticEvent) => {
    event.preventDefault();
    const target = event.target as typeof event.target & {
      firstName: { value: string };
      lastName: { value: string };
      email: { value: string };
      password: { value: string };
      repeatPassword: { value: string };
    };

    const body = {
      firstName: target.firstName.value,
      lastName: target.lastName.value,
      email: target.email.value,
      password: target.password.value,
      repeatPassword: target.repeatPassword.value,
    };

    const validatedForm = registrationForm.safeParse(body);
    if (!validatedForm.success) {
        const error = validatedForm.error
        // error.fieldErrors
    }

    try {
      // fetch("http://localhost:8080/api/v1/registration", {
      //   method: "POST",
      //   body: JSON.stringify(body),
      //   headers: {
      //        "Content-Type": "application/json"
      //   }
      // });
    } catch (err) {
      console.log("Something went wrong", err);
    }
  };

  return (
    <>
      <Head>
        <title>Registration</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <h1>Sign up</h1>
        <form onSubmit={submitHandler}>
          <div>
            <label htmlFor="firstName">First Name</label>
            <input type="text" id="fistName" name="firstName" />
          </div>
          <div>
            <label htmlFor="lastName">Last Name</label>
            <input type="text" id="lastName" name="lastName" />
          </div>
          <div>
            <label htmlFor="email">Email</label>
            <input type="email" id="email" name="email" />
          </div>
          <div>
            <label htmlFor="password">Password</label>
            <input type="password" id="password" name="password" />
          </div>
          <div>
            <label htmlFor="repeatPassword">Repeat password</label>
            <input type="password" id="repeatPassword" name="repeatPassword" />
          </div>
          {errors.length !== 0 && (
            <ul>
              {errors.map((error) => (
                <li key={error.key}>{error.message}</li>
              ))}
            </ul>
          )}
          <input type="submit" value="Register Account" />
        </form>
        <hr />
        <div>
          <ul>
            <li>
              <Link href={""}>Forgot password?</Link>
            </li>
            <li>
              <Link href={""}>Already have an account? Login!</Link>
            </li>
          </ul>
        </div>
      </main>
    </>
  );
}

const registrationForm = z
  .object({
    firstName: z.string().min(3),
    lastName: z.string().min(3),
    email: z.string().email(),
    password: z.string().min(6),
    repeatPassword: z.string().min(6),
  })
  .refine((data) => data.password === data.repeatPassword, {
    message: "Password doesn't match",
    path: ["repeatpassword"],
  });

interface ErrorField {
  key: string;
  field: string;
  message: string;
}
